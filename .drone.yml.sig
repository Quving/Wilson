eyJhbGciOiJIUzI1NiJ9.cGlwZWxpbmU6CiAgICBidWlsZDoKICAgICAgaW1hZ2U6IGRvY2tlcjpsYXRlc3QKICAgICAgZW52aXJvbm1lbnQ6CiAgICAgICAgICAtIERPQ0tFUl9IT1NUPXVuaXg6Ly8vdG1wL2hvc3Quc29jawogICAgICAgICAgLSBESFVCX0xPR0lOPSR7REhVQl9MT0dJTn0KICAgICAgICAgIC0gREhVQl9QVz0ke0RIVUJfUFd9CiAgICAgICAgICAjLSBET0NLRVJfQVVUSD0ke0RPQ0tFUl9BVVRIfQogICAgICB2b2x1bWVzOgogICAgICAgICAgLSAvdmFyL3J1bi9kb2NrZXIuc29jazovdG1wL2hvc3Quc29jazpydwogICAgICBwcml2aWxlZ2VkOiB0cnVlCiAgICAgIGNvbW1hbmRzOgogICAgICAgICAgLSBkb2NrZXIgYnVpbGQgLXQgcGluZ3Uvd2lsc29uOmxhdGVzdCAuCiAgICAgIHdoZW46CiAgICAgICAgICBicmFuY2g6IFsgbWFzdGVyIF0KCiAgICBwdWJsaXNoOgogICAgICBpbWFnZTogcGx1Z2lucy9kb2NrZXIKICAgICAgdXNlcm5hbWU6ICR7REhVQl9MT0dJTn0KICAgICAgcGFzc3dvcmQ6ICR7REhVQl9QV30KICAgICAgcmVwbzogcGluZ3Uvd2lsc29uCiAgICAgIHRhZ3M6IGxhdGVzdAogICAgICB3aGVuOgogICAgICAgIHN0YXR1czogWyBzdWNjZXNzIF0KICAgICAgICAgICAgICAgIAogICAgbm90aTJmeToKICAgICAgaW1hZ2U6IHBsdWdpbnMvc2xhY2sKICAgICAgd2ViaG9vazogJHtTTEFDS19XRUJIT09LfSAgICAKICAgICAgY2hhbm5lbDogZHJvbmUKICAgICAgdXNlcm5hbWU6IGRyb25lLWNpCiAgICAgIHRlbXBsYXRlOiB8CiAgICAgICAgKnt7IHJlcG8ubmFtZSB9fSogI3t7IGJ1aWxkLm51bWJlciB9fSBieSAqe3sgYnVpbGQuYXV0aG9yIH19KiBmaW5pc2hlZCB3aXRoIGEgKnt7IHVwcGVyY2FzZSBidWlsZC5zdGF0dXMgfX0qIGluIHt7IHNpbmNlIGJ1aWxkLmNyZWF0ZWQgfX0KICAgICAgICAqQ29tbWl0KjogX3t7IGJ1aWxkLmNvbW1pdCB9fV8KICAgICAgICAqQnJhbmNoKjogIF97eyBidWlsZC5icmFuY2ggfX1fCiAgICAgICAge3sgYnVpbGQubGluayB9fSAKICAgICAgd2hlbjoKICAgICAgICBldmVudDogWyBwdXNoLCB0YWcsIGRlcGxveW1lbnQsIHB1bGxfcmVxdWVzdCBdCiAgICAgICAgc3RhdHVzOiBbIHN1Y2Nlc3MsIGZhaWx1cmUgXQo.pavK7eH8NlY-CZzxQrjD0wQkQt1G8E9BKfU2BqOB3ps